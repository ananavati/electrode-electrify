#!/usr/bin/env node

var optimist = require('optimist')
var map = require('map-async')
var open = require('opener')
var path = require('path')
var http = require('http')
var electrify = require('../')
var fs = require('fs')
var bl = require('bl')
var btoa = require('btoa')
var marked = require('marked')

var readme = fs.readFileSync(__dirname + '/../README.md', 'utf8')
var button = fs.readFileSync(__dirname + '/../img/fork.png')

button = btoa(button)
button = 'data:image/png;base64,' + button

var argv = optimist
  .wrap(70)
  .usage('$0 [bundle(s)...] {options}')

  .alias('h', 'help')
  .describe('h', 'Displays these instructions.')

  .alias('o', 'output')
  .describe('o', 'Output path of the bundle. Defaults to stdout.')

  .alias('O', 'open')
  .describe('O', 'Opens electrify in a new browser window automatically')

  .alias('m', 'mode')
  .describe('m', 'the default file scale mode to display: should be either "count" or "size". Default: size')

  .argv

if (argv.help) {
  optimist.showHelp()
  return process.exit(1)
}

var files = argv._ || []

files = Array.isArray(files)
  ? files
  : files ? [files] : []

if (!files.length) {
  process.stdin.resume()
  process.stdin.pipe(bl(function(err, data) {
    if (err) throw err
    handle([data])
  }))
} else {
  map(files, function(file, next) {
    fs.readFile(path.resolve(file), next)
  }, function(err, files) {
    handle(files)
  })
}

function handle(bundles) {
  electrify.bundle(bundles, {
    mode: argv.mode,
    footer: marked(readme),
    header: [
      '<a href="https://github.com/electrode-io/electrify">',
      '<img style="position:absolute;top:-8px;left:-8px;border:0;"',
      'src="' + button + '"',
      'alt="Fork me on GitHub"',
      '></a>'
    ].join(' ')
  }, function(err, html) {
    if (err) throw err
    if (argv.output) return fs.writeFileSync(argv.output, html)
    if (!argv.open) return console.log(html)

    // Create a temporary HTTP server, serve up
    // the index.html page and then close the
    // process ASAP
    var server = http.createServer()

    server.on('request', function(req, res) {
      if (req.url === '/favicon.ico') {
        return res.end('missing') // PRs welcome :)
      }

      res.once('finish', function() {
        setTimeout(function() {
          process.exit()
        }, 500)
      })

      res.setHeader('content-type', 'text/html')
      res.end(html)
    }).listen(4000, function(err) {
      if (err) throw err
      open('http://localhost:4000/')
    })
  })
}
